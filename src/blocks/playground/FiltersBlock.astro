---
import { Image, Title, Text } from "@components/index"
import {
	buttons,
	typography,
	icons,
	cards,
	splits,
	cta,
	numbers,
	links,
	navigation,
	media,
	dropdownMenus,
	colors,
	inputs,
	checkboxes
} from "@assets/images/playground/index"

const playgroundBlocks = [
	{ graphic: colors, name: "Colors", id: "playground-colors" },
	{ graphic: buttons, name: "Buttons", id: "playground-buttons" },
	{ graphic: links, name: "Links", id: "playground-links" },
	{ graphic: navigation, name: "Navigation", id: "playground-navigation" },
	{ graphic: icons, name: "Icons", id: "playground-icons" },
	{ graphic: typography, name: "Typography", id: "playground-typography" },
	{ graphic: numbers, name: "Numbers", id: "playground-numbers" },
	{ graphic: media, name: "Media", id: "playground-media" },
	{ graphic: cards, name: "Cards", id: "playground-cards" },
	{ graphic: splits, name: "Splits", id: "playground-splits" },
	{ graphic: cta, name: "Call To Actions", id: "playground-cta" },
	{
		graphic: dropdownMenus,
		name: "Dropdown Menus",
		id: "playground-dropdowns"
	},
	{ graphic: inputs, name: "Inputs", id: "playground-inputs" },
	{ graphic: checkboxes, name: "Checkboxes", id: "playground-checkboxes" }
]
---

<script>
	const filterOptions = [
		...document.querySelectorAll(".playground-filters__option")
	] as HTMLElement[]
	const blocks = [
		...document.querySelectorAll(`
        #playground-buttons, 
        #playground-cards,
        #playground-icons,
        #playground-splits,
        #playground-typography,
        #playground-colors,
        #playground-numbers,
        #playground-media,
        #playground-links,
		#playground-navigation
    `)
	] as HTMLElement[]

	filterOptions.forEach((option) => {
		option.addEventListener("click", (e) => {
			const optionId = option.getAttribute("data-id")

			filterOptions.forEach((option) => {
				option.classList.remove("playground-filters__option--selected")
			})

			option.classList.add("playground-filters__option--selected")

			blocks.forEach((block) => {
				block.style.display = "none"
				if (block.id === optionId) {
					block.style.display = "flex"
				}
			})
		})
	})
</script>

<section class="playground-filters">
	<Title text="Available components" Tag="h3" />

	<div class="playground-filters__options">
		{
			playgroundBlocks.map((block) => (
				<div class="playground-filters__option" data-id={block.id}>
					<Image
						src={block.graphic}
						class="c-picture--cover"
						alt="This is the first example image"
						sizes={`(max-width: 768px) 100vw, 33vw`}
					/>

					<Text text={block.name} />
				</div>
			))
		}
	</div>
</section>

<style is:global lang="scss">
	.playground-filters {
		display: flex;
		flex-direction: column;
		gap: var(--space-16);
		margin: var(--space-24);

		&__options {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: var(--space-16);
		}

		&__option {
			transition: all ease 0.15s;
			display: flex;
			flex-direction: column;
			gap: var(--space-4);

			&--selected {
				.c-picture__image {
					border: 1px solid var(--clr-black);
				}
			}

			.c-picture__image {
				height: 100%;
			}

			&:hover {
				filter: brightness(95%);
				cursor: pointer;
			}
		}
	}
</style>
