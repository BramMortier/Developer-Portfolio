---
import {
	Text,
	Button,
	Link,
	SocialLinks,
	Image,
	Title,
	Icon
} from "@components/index"

import { navigation } from "@config/global/navigation"
import { footer } from "@config/global/footer"

interface Props {
	class?: string
}

const { class: className } = Astro.props

function getCurrentYear() {
	const date = new Date()
	return date.getFullYear().toString()
}

function getFormattedTime() {
	const date = new Date()

	let hours = date.getHours()
	const minutes = date.getMinutes().toString().padStart(2, "0")
	const offset = -date.getTimezoneOffset() / 60
	const timeZone = `GMT${offset >= 0 ? "+" : ""}${offset}`

	const ampm = hours >= 12 ? "PM" : "AM"

	hours = hours % 12
	hours = hours ? hours : 12

	const formattedTime = `${hours}:${minutes} ${ampm} ${timeZone}`

	return formattedTime
}
---

<footer class:list={["footer", className]}>
	<div class="footer__info">
		<div class="footer__menu">
			<Title text="Menu" Tag="h3" />

			<ul>
				{
					navigation.links.map((link) => (
						<Link href={link.href}>{link.text}</Link>
					))
				}
			</ul>
		</div>

		<div class="footer__socials">
			<Title text="Socials" Tag="h3" />

			<SocialLinks />
		</div>

		<div class="footer__cta">
			<div class="footer__date">
				<div>
					<Title text="Local time" Tag="h3" />

					<Text text={getFormattedTime()} />
				</div>

				<div>
					<Title text="Version" Tag="h3" />

					<Text text={`${getCurrentYear()} @ Edition`} />
				</div>
			</div>

			<div class="footer__cta-buttons">
				<Button>
					<span>Download resume</span>
					<Icon name="download" size={20} />
				</Button>

				<Button>
					<span>Contact me</span>
					<Icon name="text-bubble" size={20} />
				</Button>
			</div>
		</div>
	</div>

	<div class="footer__projects">
		{
			footer.projects.map((project) => (
				<div class="footer__project">
					<Title text={project.name} Tag="h3" />

					<Image
						src={project.image}
						class="c-picture--cover"
						alt={project.name}
						sizes="(max-width: 420px) 50vw, 100vw"
					/>
				</div>
			))
		}
	</div>
</footer>

<style is:global lang="scss">
	@use "@styles/mixins.scss" as *;

	.footer {
		--footer-bg: transparent;

		background-color: var(--footer-bg);

		padding-top: var(--space-64);
		display: flex;
		flex-direction: column;
		gap: var(--space-64);

		@include styles-for(laptop) {
			gap: var(--space-96);
			padding-top: var(--space-160);
		}

		&__info {
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			gap: var(--space-48) var(--space-32);
			width: 100%;
			max-width: 1164px;
			margin: 0 auto;
			padding-inline: var(--space-16);

			@include styles-for(tablet) {
				grid-template-columns: repeat(12, 1fr);
				gap: var(--space-64) var(--space-32);
				padding-inline: var(--space-32);
			}

			@include styles-for(laptop) {
				gap: var(--space-48);
				max-width: 1696px;
				padding-inline: var(--space-48);
			}

			@include styles-for(desktop) {
				max-width: 1728px;
				padding-inline: var(--space-64);
				gap: var(--space-64);
			}
		}

		&__menu {
			grid-column: 1 / 3;
			display: flex;
			flex-direction: column;
			gap: var(--space-48);

			@include styles-for(tablet) {
				grid-column: 1 / 5;
			}

			@include styles-for(laptop) {
				grid-column: 1 / 4;
			}

			@include styles-for(desktop) {
				grid-column: 1 / 3;
			}

			& > ul {
				display: flex;
				flex-direction: column;
			}
		}

		&__socials {
			grid-column: 3 / 5;
			display: flex;
			flex-direction: column;
			gap: var(--space-48);

			@include styles-for(tablet) {
				grid-column: 5 / 10;
			}

			@include styles-for(laptop) {
				grid-column: 4 / 8;
			}

			@include styles-for(desktop) {
				grid-column: 3 / 7;
			}
		}

		&__cta {
			grid-column: 1 / 5;
			grid-row: 2 / 3;
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			gap: var(--space-64);

			@include styles-for(tablet) {
				grid-column: 1 / 13;
				grid-row: 2 / 3;
			}

			@include styles-for(laptop) {
				grid-column: 6 / 13;
				grid-row: 2 / 3;
				gap: var(--space-32);
			}

			@include styles-for(desktop) {
				grid-column: 7 / 13;
				grid-row: 1 / 2;
			}
		}

		&__date {
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			gap: var(--space-48);

			@include styles-for(tablet) {
				grid-template-columns: repeat(12, 1fr);
				gap: var(--space-32);
			}

			@include styles-for(laptop) {
				grid-template-columns: repeat(7, 1fr);
				gap: var(--space-48);
			}

			@include styles-for(desktop) {
				grid-template-columns: repeat(6, 1fr);
				gap: var(--space-64);
			}

			& > div {
				display: flex;
				flex-direction: column;
				gap: var(--space-48);
				align-items: flex-start;

				@include styles-for(laptop) {
					align-items: flex-end;
				}

				&:nth-child(1) {
					grid-column: 1 / 3;

					@include styles-for(tablet) {
						grid-column: 1 / 5;
					}

					@include styles-for(laptop) {
						grid-column: 2 / 5;
					}

					@include styles-for(desktop) {
						grid-column: 3 / 5;
					}
				}

				&:nth-child(2) {
					grid-column: 3 / 5;

					@include styles-for(tablet) {
						grid-column: 5 / 9;
					}

					@include styles-for(laptop) {
						grid-column: 5 / 8;
					}

					@include styles-for(desktop) {
						grid-column: 5 / 7;
					}
				}
			}
		}

		&__cta-buttons {
			display: flex;
			gap: var(--space-16);
			flex-direction: column;

			@include styles-for(tablet) {
				flex-direction: row;
				justify-content: flex-end;
			}

			@include styles-for(laptop) {
				justify-content: flex-end;
			}
		}

		&__projects {
			height: 50vh;
			display: flex;
			justify-content: center;

			@include styles-for(tablet) {
				height: 40vh;
			}

			@include styles-for(laptop) {
				height: 40vh;
			}
		}

		&__project {
			height: 100%;
			min-width: 100vw;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: flex-end;
			gap: var(--space-24);

			@include styles-for(tablet) {
				min-width: calc(100vw / 2);
			}

			@include styles-for(laptop) {
				min-width: calc(100vw / 3);
			}

			@include styles-for(desktop) {
				min-width: calc(100vw / 5);
			}

			@include styles-for(desktopL) {
				min-width: calc(100vw / 6);
			}

			&:nth-child(3n + 1) > .c-picture {
				height: 80%;
			}

			&:nth-child(3n + 2) > .c-picture {
				height: 70%;
			}

			&:nth-child(3n + 3) > .c-picture {
				height: 90%;
			}
		}
	}
</style>
