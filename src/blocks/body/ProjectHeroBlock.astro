---
import { Title, Text, Image, PlainList, TechStackList } from "@components/index"

interface Props {
	title?: string
	intro?: string
	completed?: string
	client?: string
	services?: string[]
	industry?: string
	technologies?: string[]
	image?: ImageMetadata
	imageMobile?: ImageMetadata
	class?: string
}

const {
	class: className,
	title,
	intro,
	image,
	imageMobile,
	completed,
	client,
	services,
	industry,
	technologies
} = Astro.props

function splitString(string: string): string[] {
	const words = string.split(" ")

	const mid = Math.floor(words.length / 2)

	const firstHalfWords = words.slice(0, mid)
	const secondHalfWords = words.slice(mid)

	const firstHalf = firstHalfWords.join(" ")
	const secondHalf = secondHalfWords.join(" ")

	return [firstHalf, secondHalf]
}

const [introStart, introEnd] = splitString(intro)
---

<div class:list={["project-hero", className]}>
	<div class="project-hero__info">
		{title && <Title text={title} Tag="h1" arrow={true} />}

		<Image
			src={imageMobile}
			class="c-picture--cover"
			alt="hero image"
			sizes="100vw"
		/>

		<div class="project-hero__info-details">
			<PlainList title="Completed" items={[completed]} />

			<PlainList title="Services" items={services} />

			<PlainList title="Client" items={[client]} />

			<PlainList title="Industry" items={[industry]} />

			<TechStackList
				class="c-tech-stack-list--mirrored"
				technologies={technologies}
			/>
		</div>
	</div>

	<div class="project-hero__image">
		<Image
			src={image}
			class="c-picture--cover"
			alt="hero image"
			sizes="(max-width: 768px) 100vw, 50vw"
		/>
	</div>

	<div class="project-hero__intro">
		<Text class="typo-body-lg c-text--subtle" text={introStart} />

		<Text class="typo-body-lg c-text--subtle" text={introEnd} />
	</div>
</div>

<style is:global lang="scss">
	@use "@styles/mixins.scss" as *;

	.project-hero {
		padding-bottom: var(--space-64);
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: var(--space-48);

		@include styles-for(tablet) {
			grid-template-columns: repeat(12, 1fr);
			gap: var(--space-48) var(--space-32);
		}

		@include styles-for(laptop) {
			padding-block: var(--space-32) var(--space-160);
			gap: var(--space-96) var(--space-64);
		}

		&__info {
			grid-column: span 4;
			display: flex;
			justify-content: space-between;
			flex-direction: column;
			gap: var(--space-24);

			@include styles-for(tablet) {
				gap: var(--space-48);
				grid-column: span 12;
			}

			@include styles-for(laptop) {
				gap: var(--space-64);
				grid-column: 1 / 7;
			}

			@include styles-for(desktop) {
				gap: var(--space-96);
				grid-column: 1 / 8;
			}

			& > .c-picture {
				@include styles-for(laptop) {
					display: none;
				}
			}
		}

		&__info-details {
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			gap: var(--space-32) var(--space-48);

			@include styles-for(tablet) {
				grid-template-columns: repeat(12, 1fr);
				gap: var(--space-64);
			}

			@include styles-for(laptop) {
				grid-template-columns: repeat(7, 1fr);
				gap: var(--space-48);
			}

			@include styles-for(desktop) {
				gap: var(--space-64);
			}

			& > div:nth-child(1) {
				grid-column: 1 / 3;

				@include styles-for(tablet) {
					grid-column: 1 / 4;
				}

				@include styles-for(desktop) {
					grid-column: 1 / 3;
				}
			}

			& > div:nth-child(2) {
				grid-column: 3 / 5;

				@include styles-for(tablet) {
					grid-column: 4 / 7;
				}

				@include styles-for(desktop) {
					grid-column: 3 / 5;
				}
			}

			& > div:nth-child(3) {
				grid-column: 1 / 3;

				@include styles-for(tablet) {
					grid-column: 7 / 10;
				}

				@include styles-for(laptop) {
					grid-column: 1 / 4;
					grid-row: 2 / 3;
				}

				@include styles-for(desktop) {
					grid-column: 1 / 3;
				}
			}

			& > div:nth-child(4) {
				grid-column: 3 / 5;

				@include styles-for(tablet) {
					grid-column: 10 / 13;
				}

				@include styles-for(laptop) {
					grid-column: 4 / 7;
					grid-row: 2 / 3;
				}

				@include styles-for(desktop) {
					grid-column: 3 / 5;
				}
			}

			& > .c-tech-stack-list {
				display: none;

				@include styles-for(desktop) {
					display: initial;
					grid-column: 6 / 8;
					grid-row: 1 / 3;
					align-self: flex-end;
				}
			}
		}

		&__image {
			display: none;

			@include styles-for(laptop) {
				display: initial;
				grid-column: 7 / 13;
			}

			@include styles-for(desktop) {
				grid-column: 8 / 13;
			}
		}

		&__intro {
			grid-column: span 4;
			display: flex;
			flex-direction: column;
			gap: var(--space-24);

			@include styles-for(tablet) {
				grid-column: span 12;
				flex-direction: row;
				gap: var(--space-64);
			}

			@include styles-for(laptop) {
				grid-column: span 10;
			}
		}
	}
</style>
